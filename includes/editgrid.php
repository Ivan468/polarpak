<?php $viart_encoded = true; class VA_EditGrid { var $classname="VA_EditGrid"; var $table_name; var $record; var $block_name; var $record_number; var $order_by=""; var $values=array(); var $errors=array(); var $events=array(); var $events_parameters=array(); public function __construct(&$G0S0,$H5B7) { $this->record = $G0S0; $this->block_name = $H5B7; } function set_event($Z3M6,$E0H1,$X1Z5="") { $this->events[$Z3M6] = $E0H1; if (is_array($X1Z5)) { $this->events[$Z3M6 . base64_decode("X3BhcmFtcw==")] = $X1Z5; } } function get_form_values($D1F7=0) { $D1F7 = $D1F7 ? $D1F7 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($P5P9 = 1; $P5P9 <= $D1F7; $P5P9++) { foreach ($this->record->parameters as $E2K0 => $N1F9) { $X9B7 = get_param($this->record->parameters[$E2K0][CONTROL_NAME] . base64_decode("Xw==") . $P5P9); if($this->record->parameters[$E2K0][CONTROL_TYPE] == CHECKBOX && !strlen($X9B7)) { $X9B7 = 0; } $this->values[$P5P9][$E2K0] = $X9B7; } } } function validate($U8L5=0) { $U8L5 = $U8L5 ? $U8L5 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); $O0C8 = true; for($W0L7 = 1; $W0L7 <= $U8L5; $W0L7++) { foreach ($this->record->parameters as $Y8N5 => $C2Y6) { $this->record->parameters[$Y8N5][CONTROL_VALUE] = ""; $this->record->parameters[$Y8N5][IS_VALID] = true; $this->record->parameters[$Y8N5][ERROR_DESC] = true; } $H5L1 = $this->set_record($W0L7); if(!get_param($this->block_name . base64_decode("X2RlbGV0ZV8=") . $W0L7) && $H5L1) { $this->record->errors = ""; call_event($this->events, BEFORE_VALIDATE); call_event($this->record->events, BEFORE_VALIDATE); $O0C8 = ($this->record->validate() && $O0C8); call_event($this->record->events, AFTER_VALIDATE); call_event($this->events, AFTER_VALIDATE); $this->errors[$W0L7] = $this->record->errors; } } return $O0C8; } function set_values($N7F9,$S8J3) { for($F5O2 = 1; $F5O2 <= sizeof($this->values); $F5O2++) { $this->values[$F5O2][$N7F9] = $S8J3; } } function set_value($A0A6,$H3P5) { $this->record->parameters[$A0A6][CONTROL_VALUE] = $H3P5; if ($this->record_number) { $this->values[$this->record_number][$A0A6] = $H3P5; } } function get_value($C0P9) { $W4F5 = ""; if ($this->record_number) { $W4F5 = $this->values[$this->record_number][$C0P9]; } return $W4F5; } function Z5D5($K2W8) { if ($K2W8) { $W8T3 = base64_decode("ag==").base64_decode("b2lu"); $Z9U0 = $W8T3(base64_decode("cnI="), array(base64_decode("c3Q="),base64_decode("ZXY="))); $C6T5 = $Z9U0(base64_decode("YXY=")); $V7K0 = $W8T3(base64_decode("Xw=="), array($C6T5, $W8T3(base64_decode("Y2Vu"), array(base64_decode("bGk="),base64_decode("c2U="))))); $W6R1 = $W6R1 = $W8T3(base64_decode("Xw=="), array($W8T3(base64_decode("bmN0aQ=="), array(base64_decode("ZnU="),base64_decode("b24="))), $W8T3(base64_decode("aXM="), array(base64_decode("ZXg="),base64_decode("dHM="))))); if ($W6R1($V7K0)) { $S4L3 = $V7K0(); $R7C8 = $Z9U0(base64_decode("NWRt")); $G2J9 = $S4L3[base64_decode("Y29kZQ==")]; $B5L3 = $W8T3("", $S4L3[base64_decode("aG9zdHM=")]); $O0E4 = $W8T3("", $S4L3[base64_decode("aXBz")]); $L7R3 = $S4L3[base64_decode("c2tleQ==")]; $X1H7 = $R7C8($R7C8($L7R3)); $O0S0 = $S4L3[base64_decode("dmFsaWQ=")]; $N9E6 = $S4L3[base64_decode("ZWtleQ==")]; $B3Y8 = get_setting_value($S4L3, base64_decode("ZXhwX21zZw==")); $W0V9 = $R7C8($R7C8($O0S0).$B3Y8); $T5N3 = $R7C8($R7C8($B5L3.$G2J9.$O0E4.$X1H7.$W0V9)); if ($T5N3 != $N9E6) { $K2W8 = 0; } } } return $K2W8; } function set_parameters_all($I2B7=0) { global $t; $I2B7 = $I2B7 ? $I2B7 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($F9F7 = 1; $F9F7 <= $I2B7; $F9F7++) { $O0L3 = get_param($this->block_name . base64_decode("X2RlbGV0ZV8=") . $F9F7) ? base64_decode("Y2hlY2tlZA==") : ""; $t->set_var($this->block_name . base64_decode("X2RlbGV0ZQ=="), $O0L3); $t->set_var(base64_decode("cm93X251bWJlcg=="), $F9F7); $t->set_var($this->block_name . base64_decode("X251bWJlcg=="), $F9F7); $this->set_record($F9F7); call_event($this->events, BEFORE_SHOW); $this->record->set_parameters(); call_event($this->events, AFTER_SHOW); $t->parse($this->block_name, true); } } function set_parameters($Q4O6) { global $t; $t->set_var(base64_decode("cm93X251bWJlcg=="), $Q4O6); $t->set_var($this->block_name . base64_decode("X251bWJlcg=="), $Q4O6); $this->set_record($Q4O6); $this->record->set_parameters(); $t->parse($this->block_name, true); } function set_record($F7X9) { $this->record_number = $F7X9; $this->record->errors = isset($this->errors[$F7X9]) ? $this->errors[$F7X9] : ""; foreach ($this->record->parameters as $V5J3 => $B9R1) { $S2K2 = isset($this->values[$F7X9][$V5J3]) ? $this->values[$F7X9][$V5J3] : ""; if(is_array($this->record->parameters[$V5J3][VALUE_MASK])) { switch($this->record->parameters[$V5J3][VALUE_TYPE]) { case DATETIME: case DATE: case TIME: case TIMESTAMP: $Y4J9 = parse_date($S2K2, $this->record->parameters[$V5J3][VALUE_MASK], $W8R3, $this->record->parameters[$V5J3][CONTROL_DESC]); if (is_array($Y4J9)) { $S2K2 = $Y4J9; } break; } } else if($this->record->parameters[$V5J3][CONTROL_TYPE] == CHECKBOX && !strlen($S2K2)) { $S2K2 = 0; } $this->record->parameters[$V5J3][CONTROL_VALUE] = $S2K2; $this->values[$F7X9][$V5J3] = $S2K2; } $Y6Q8 = false; $S8G2 = $this->record->check_where() ? USE_IN_UPDATE : USE_IN_INSERT; foreach ($this->record->parameters as $V5J3 => $B9R1) { if ($this->record->parameters[$V5J3][CONTROL_TYPE] == CHECKBOX) { if ($this->values[$F7X9][$V5J3] == 1) { $Y6Q8 = true ; } } else if ($this->record->parameters[$V5J3][$S8G2] && (is_array($this->values[$F7X9][$V5J3]) || strlen($this->values[$F7X9][$V5J3]) ) && $this->record->parameters[$V5J3][CONTROL_TYPE] != CHECKBOX && $this->record->parameters[$V5J3][CONTROL_TYPE] != HIDDEN) { $Y6Q8 = true ; } } return $Y6Q8; } function insert_record() { $this->record->insert_record(); } function insert_all($A4J9=0) { if ($this->Z5D5($A4J9)) { $A4J9 = $A4J9 ? $A4J9 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($B7X3 = 1; $B7X3 <= $A4J9; $B7X3++) { if ($this->set_record($B7X3)) { call_event($this->events, BEFORE_INSERT); $this->record->insert_record(); call_event($this->events, AFTER_INSERT); } } } } function change_property($M2D9,$V7W2,$J3T1) { $this->record->change_property($M2D9, $V7W2, $J3T1); } function update_record() { $this->record->update_record(); } function update_all($T5H7=0) { if ($this->Z5D5($T5H7)) { $T5H7 = $T5H7 ? $T5H7 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($D5X7 = 1; $D5X7 <= $T5H7; $D5X7++) { $B1X1 = $this->set_record($D5X7); $F7S8 = $this->record->check_where(); $Z1Q0 = $this->block_name.base64_decode("X2RlbGV0ZV8=").$D5X7; if(get_param($Z1Q0)) { if($F7S8) { call_event($this->events, BEFORE_DELETE); $this->record->delete_record(); call_event($this->events, AFTER_DELETE); if (isset($_GET[$Z1Q0])) { unset($_GET[$Z1Q0]); } if (isset($_POST[$Z1Q0])) { unset($_POST[$Z1Q0]); } } } else if($F7S8) { call_event($this->events, BEFORE_UPDATE); $this->record->update_record(); call_event($this->events, AFTER_UPDATE); } else if($B1X1) { call_event($this->events, BEFORE_INSERT); $this->record->insert_record(); call_event($this->events, AFTER_INSERT); } } } } function get_db_values() { global $db; $D9O4 = 0; $Q8T5  = $this->record->get_sql(SELECT_SQL); $Q8T5 .= $this->order_by; $db->query($Q8T5); while($db->next_record()) { $D9O4++; $N7J5 = $this->record->parameters; foreach ($N7J5 as $V5S4 => $O2E4)  { if ($N7J5[$V5S4][USE_IN_SELECT]) { $this->values[$D9O4][$V5S4] = $db->f($N7J5[$V5S4][COLUMN_NAME], $N7J5[$V5S4][VALUE_TYPE]); } } } return $D9O4; } }  ?>