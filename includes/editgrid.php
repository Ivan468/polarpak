<?php $viart_encoded = true; class VA_EditGrid { var $classname="VA_EditGrid"; var $table_name; var $record; var $block_name; var $record_number; var $order_by=""; var $values=array(); var $errors=array(); var $events=array(); var $events_parameters=array(); public function __construct(&$W2K4,$V1B7) { $this->record = $W2K4; $this->block_name = $V1B7; } function set_event($E4M4,$V3H5,$U0U0="") { $this->events[$E4M4] = $V3H5; if (is_array($U0U0)) { $this->events[$E4M4 . base64_decode("X3BhcmFtcw==")] = $U0U0; } } function get_form_values($Z3H7=0) { $Z3H7 = $Z3H7 ? $Z3H7 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($V1Y4 = 1; $V1Y4 <= $Z3H7; $V1Y4++) { foreach ($this->record->parameters as $C2G8 => $F3C6) { $Q0R5 = get_param($this->record->parameters[$C2G8][CONTROL_NAME] . base64_decode("Xw==") . $V1Y4); if($this->record->parameters[$C2G8][CONTROL_TYPE] == CHECKBOX && !strlen($Q0R5)) { $Q0R5 = 0; } $this->values[$V1Y4][$C2G8] = $Q0R5; } } } function validate($X5H7=0) { $X5H7 = $X5H7 ? $X5H7 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); $F9R9 = true; for($U4K0 = 1; $U4K0 <= $X5H7; $U4K0++) { foreach ($this->record->parameters as $Q8U6 => $Q8U0) { $this->record->parameters[$Q8U6][CONTROL_VALUE] = ""; $this->record->parameters[$Q8U6][IS_VALID] = true; $this->record->parameters[$Q8U6][ERROR_DESC] = true; } $B1I8 = $this->set_record($U4K0); if(!get_param($this->block_name . base64_decode("X2RlbGV0ZV8=") . $U4K0) && $B1I8) { $this->record->errors = ""; call_event($this->events, BEFORE_VALIDATE); call_event($this->record->events, BEFORE_VALIDATE); $F9R9 = ($this->record->validate() && $F9R9); call_event($this->record->events, AFTER_VALIDATE); call_event($this->events, AFTER_VALIDATE); $this->errors[$U4K0] = $this->record->errors; } } return $F9R9; } function set_values($M0V5,$Q4Q8) { for($H9G0 = 1; $H9G0 <= sizeof($this->values); $H9G0++) { $this->values[$H9G0][$M0V5] = $Q4Q8; } } function set_value($E4O2,$B9V1) { $this->record->parameters[$E4O2][CONTROL_VALUE] = $B9V1; if ($this->record_number) { $this->values[$this->record_number][$E4O2] = $B9V1; } } function get_value($J1L1) { $R1I4 = ""; if ($this->record_number) { $R1I4 = $this->values[$this->record_number][$J1L1]; } return $R1I4; } function F5C8($O8V5) { if ($O8V5) { $N3B5 = base64_decode("ag==").base64_decode("b2lu"); $R5T5 = $N3B5(base64_decode("cnI="), array(base64_decode("c3Q="),base64_decode("ZXY="))); $V9B5 = $R5T5(base64_decode("YXY=")); $A0I8 = $N3B5(base64_decode("Xw=="), array($V9B5, $N3B5(base64_decode("Y2Vu"), array(base64_decode("bGk="),base64_decode("c2U="))))); $Y6M8 = $Y6M8 = $N3B5(base64_decode("Xw=="), array($N3B5(base64_decode("bmN0aQ=="), array(base64_decode("ZnU="),base64_decode("b24="))), $N3B5(base64_decode("aXM="), array(base64_decode("ZXg="),base64_decode("dHM="))))); if ($Y6M8($A0I8)) { $Z1Y2 = $A0I8(); $Q2K0 = $R5T5(base64_decode("NWRt")); $A0T9 = $Z1Y2[base64_decode("Y29kZQ==")]; $H7L3 = $N3B5("", $Z1Y2[base64_decode("aG9zdHM=")]); $F9M0 = $N3B5("", $Z1Y2[base64_decode("aXBz")]); $I2M0 = $Z1Y2[base64_decode("c2tleQ==")]; $L1X3 = $Q2K0($Q2K0($I2M0)); $X5O4 = $Z1Y2[base64_decode("dmFsaWQ=")]; $L7A8 = $Z1Y2[base64_decode("ZWtleQ==")]; $P3H1 = get_setting_value($Z1Y2, base64_decode("ZXhwX21zZw==")); $W6F1 = $Q2K0($Q2K0($X5O4).$P3H1); $A8E2 = $Q2K0($Q2K0($H7L3.$A0T9.$F9M0.$L1X3.$W6F1)); if ($A8E2 != $L7A8) { $O8V5 = 0; } } } return $O8V5; } function set_parameters_all($K0R1=0) { global $t; $K0R1 = $K0R1 ? $K0R1 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($Q6V3 = 1; $Q6V3 <= $K0R1; $Q6V3++) { $X7P3 = get_param($this->block_name . base64_decode("X2RlbGV0ZV8=") . $Q6V3) ? base64_decode("Y2hlY2tlZA==") : ""; $t->set_var($this->block_name . base64_decode("X2RlbGV0ZQ=="), $X7P3); $t->set_var(base64_decode("cm93X251bWJlcg=="), $Q6V3); $t->set_var($this->block_name . base64_decode("X251bWJlcg=="), $Q6V3); $this->set_record($Q6V3); call_event($this->events, BEFORE_SHOW); $this->record->set_parameters(); call_event($this->events, AFTER_SHOW); $t->parse($this->block_name, true); } } function set_parameters($Y8C6) { global $t; $t->set_var(base64_decode("cm93X251bWJlcg=="), $Y8C6); $t->set_var($this->block_name . base64_decode("X251bWJlcg=="), $Y8C6); $this->set_record($Y8C6); $this->record->set_parameters(); $t->parse($this->block_name, true); } function set_record($I6G4) { $this->record_number = $I6G4; $this->record->errors = isset($this->errors[$I6G4]) ? $this->errors[$I6G4] : ""; foreach ($this->record->parameters as $E8E6 => $L5D5) { $K0W0 = isset($this->values[$I6G4][$E8E6]) ? $this->values[$I6G4][$E8E6] : ""; if(is_array($this->record->parameters[$E8E6][VALUE_MASK])) { switch($this->record->parameters[$E8E6][VALUE_TYPE]) { case DATETIME: case DATE: case TIME: case TIMESTAMP: $N7M2 = parse_date($K0W0, $this->record->parameters[$E8E6][VALUE_MASK], $S4R1, $this->record->parameters[$E8E6][CONTROL_DESC]); if (is_array($N7M2)) { $K0W0 = $N7M2; } break; } } else if($this->record->parameters[$E8E6][CONTROL_TYPE] == CHECKBOX && !strlen($K0W0)) { $K0W0 = 0; } $this->record->parameters[$E8E6][CONTROL_VALUE] = $K0W0; $this->values[$I6G4][$E8E6] = $K0W0; } $K8F1 = false; $D3A2 = $this->record->check_where() ? USE_IN_UPDATE : USE_IN_INSERT; foreach ($this->record->parameters as $E8E6 => $L5D5) { if ($this->record->parameters[$E8E6][CONTROL_TYPE] == CHECKBOX) { if ($this->values[$I6G4][$E8E6] == 1) { $K8F1 = true ; } } else if ($this->record->parameters[$E8E6][$D3A2] && (is_array($this->values[$I6G4][$E8E6]) || strlen($this->values[$I6G4][$E8E6]) ) && $this->record->parameters[$E8E6][CONTROL_TYPE] != CHECKBOX && $this->record->parameters[$E8E6][CONTROL_TYPE] != HIDDEN) { $K8F1 = true ; } } return $K8F1; } function insert_record() { $this->record->insert_record(); } function insert_all($Q4G4=0) { if ($this->F5C8($Q4G4)) { $Q4G4 = $Q4G4 ? $Q4G4 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($O4R9 = 1; $O4R9 <= $Q4G4; $O4R9++) { if ($this->set_record($O4R9)) { call_event($this->events, BEFORE_INSERT); $this->record->insert_record(); call_event($this->events, AFTER_INSERT); } } } } function change_property($V7A6,$T1X5,$O6J3) { $this->record->change_property($V7A6, $T1X5, $O6J3); } function update_record() { $this->record->update_record(); } function update_all($W2M0=0) { if ($this->F5C8($W2M0)) { $W2M0 = $W2M0 ? $W2M0 : get_param(base64_decode("bnVtYmVyXw==") . $this->block_name); for($P7J9 = 1; $P7J9 <= $W2M0; $P7J9++) { $O6C4 = $this->set_record($P7J9); $O2Q4 = $this->record->check_where(); $V3T7 = $this->block_name.base64_decode("X2RlbGV0ZV8=").$P7J9; if(get_param($V3T7)) { if($O2Q4) { call_event($this->events, BEFORE_DELETE); $this->record->delete_record(); call_event($this->events, AFTER_DELETE); if (isset($_GET[$V3T7])) { unset($_GET[$V3T7]); } if (isset($_POST[$V3T7])) { unset($_POST[$V3T7]); } } } else if($O2Q4) { call_event($this->events, BEFORE_UPDATE); $this->record->update_record(); call_event($this->events, AFTER_UPDATE); } else if($O6C4) { call_event($this->events, BEFORE_INSERT); $this->record->insert_record(); call_event($this->events, AFTER_INSERT); } } } } function get_db_values() { global $db; $M6Q6 = 0; $W6W4  = $this->record->get_sql(SELECT_SQL); $W6W4 .= $this->order_by; $db->query($W6W4); while($db->next_record()) { $M6Q6++; $I0U6 = $this->record->parameters; foreach ($I0U6 as $Y8F9 => $J1E0)  { if ($I0U6[$Y8F9][USE_IN_SELECT]) { $this->values[$M6Q6][$Y8F9] = $db->f($I0U6[$Y8F9][COLUMN_NAME], $I0U6[$Y8F9][VALUE_TYPE]); } } } return $M6Q6; } }  ?>